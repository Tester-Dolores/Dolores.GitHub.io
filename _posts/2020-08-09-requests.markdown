---
layout: post
title:  "Requests"
date:   2020-08-09 00:16:49 +0800
categories: 接口测试 Python库
tags: 接口测试 Python库
---
<a name="index">**目录**</a>
<a href="#0">安装</a>  
<a href="#1">使用</a>  
<a href="#2">重写requests</a>  
<a href="#3">发送GET请求</a>  
<a href="#4">发送POST请求</a>  
<a href="#5">发送multipart/form-data 请求</a>  
<a href="#6">获取请求响应信息</a>  

***

<a href="https://requests.readthedocs.io/zh_CN/latest/" target="_blank"> Requests官网文档</a>


# <a name="0">安装
 `pip install requests`
 
# <a name="1">使用

 * `import requests`
 * `from requests import Session`
 
# <a name="2">重写requests

```
class MySession(Session):
    def request(self, method, url, *args, **kwargs):
        url = 'http://www.baidu.com/api' + url
        resp = super(MySession, self).request(
            method, url,  *args, **kwargs
        )
        return resp
        
req = MySession()
req.headers = {"Accept": "application/json",}
```
# <a name="3">发送GET请求
`req.get('address')`

# <a name="4">发送POST请求
`req.post('login',json={"account":"test","password":"123456"})`

# <a name="5">发送multipart/form-data 请求
参考：<a href="https://blog.csdn.net/xuezhangjun0121/article/details/82023320">使用python的requests 发送multipart/form-data 请求</a>

一个multipart/form-data 的表单数据，在http里面抓包如下：
```
------WebKitFormBoundaryVC8tladcocNyAE7v
Content-Disposition: form-data; name="file";
filename="test.csv"
Content-Type: application/vnd.ms-excel
------WebKitFormBoundaryVC8tladcocNyAE7v
Content-Disposition: form-data;
name="test_id" 123
------WebKitFormBoundaryVC8tladcocNyAE7v
Content-Disposition: form-data; name="name" test
------WebKitFormBoundaryVC8tladcocNyAE7v
```
上述数据在requests请求里面可以模拟为:
```

     data1={
       "file":('test.csv',open('文件路径','rb'),'application/vnd.ms-excel'),
       "test_id": (None,"123"),
       "name":(None, "1"),
     } 

    header1 = {
      "Content-Type":"multipart/form-data; boundary=----WebKitFormBoundaryVC8tladcocNyAE7v"
      }

     response=req.post(url,files=files,header=header1)
```

# <a name="6">获取请求响应信息
```
resp.request.url  请求url
resp.json() 响应结果
resp.request.body 请求体
resp.request.headers 请求头
```


[jekyll]:      http://jekyllrb.com
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-help]: https://github.com/jekyll/jekyll-help